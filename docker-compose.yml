version: '3.5'
services:
  postgres:
    container_name: postgres-master
    image: "mdillon/postgis:latest"
    volumes:
      - "pgdata:/var/lib/postgresql/data"
    ports:
      - "5555:5432"
    env_file:
      - .env
    networks:
      - global
  webapp:
    container_name: webapp-master
    restart: always
    build: ./webapp
    image: webapp-master
    volumes:
      - ./webapp/:/srv/webapp/
    ports:
      - "8001:8001"
    depends_on:
      - postgres
    links:
      - postgres:postgres
    env_file: .env
    networks:
      - global
  webapp-demo-data:
    container_name: webapp-demo-data-master
    build: ./webapp/demo-data
    image: webapp-demo-data-master
    env_file:
      - .env
    networks:
      - global
    depends_on:
      - postgres
    links:
      - postgres:postgres
    environment:
      WAIT_HOSTS: postgres:5432
  slide:
    container_name: slide-master
    restart: always
    build: ./slide
    image: slide-master
    command: npm start
    volumes:
      - ./slide/:/srv/slide/
      - /srv/slide/node_modules
    ports:
      - "8000:8000"
    env_file: .env
    networks:
      - global

volumes:
  pgdata:

networks:
  global:
    name: global-network
